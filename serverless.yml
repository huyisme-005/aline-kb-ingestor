service: aline-kb-ingestor-backend

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
  apiGateway:
    shouldStartNameWithService: true
    minimumCompressionSize: 1024
    binaryMediaTypes:
      - '*/*'

functions:
  api:
    handler: backend/api/main.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Origin
            allowCredentials: false
    environment:
      STAGE: ${self:provider.stage}
    timeout: 29
    memorySize: 512

package:
  exclude:
    - frontend/**
    - backend/tests/**
    - backend/data/**
    - backend/env/**
    - backend/__pycache__/**
    - .git/**
    - .gitignore
    - README.md
    - node_modules/**
    - "*.log"
  include:
    - backend/requirements.txt
    - backend/__init__.py
    - backend/**/*.py

plugins:
  - serverless-python-requirements
  - serverless-domain-manager

custom:
  pythonRequirements:
    fileName: backend/requirements.txt
    dockerizePip: true
    slim: true
    dockerImage: python:3.11
    pipCmdExtraArgs:
      - --upgrade
      - --no-cache-dir
    dockerRunCmdExtraArgs:
      - -v
      - /etc/ssl/certs:/etc/ssl/certs:ro
    dockerBuildCmdExtraArgs:
      - --build-arg
      - DEBIAN_FRONTEND=noninteractive
      - --build-arg
      - 'BUILD_DEPS=gcc g++ make python3-dev libssl-dev'
    dockerExtraFiles:
      - /etc/ssl/certs/ca-certificates.crt
  customDomain:
    domainName: api.${self:provider.stage}.aline-kb-ingestor.com
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

 