service: aline-kb-ingestor-backend

provider:
  name: aws
  runtime: python3.11
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
  apiGateway:
    shouldStartNameWithService: true
    minimumCompressionSize: 1024
    binaryMediaTypes:
      - '*/*'
  httpApi:
    payload: '2.0'

functions:
  api:
    handler: backend/api/main.handler
    events:
      - httpApi:
          path: /{proxy+}
          method: ANY
    environment:
      STAGE: ${self:provider.stage}
      PYTHONPATH: /var/task
    timeout: 29
    memorySize: 512

package:
  patterns:
    - '!frontend/**'
    - '!backend/tests/**'
    - '!backend/data/**'
    - '!backend/env/**'
    - '!backend/__pycache__/**'
    - '!.git/**'
    - '!.gitignore'
    - '!README.md'
    - '!node_modules/**'
    - '!*.log'
    - backend/requirements.txt
    - backend/__init__.py
    - backend/**/*.py

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    fileName: backend/requirements.txt
    dockerizePip: true
    slim: true
    layer:
      name: python-deps
      description: Python dependencies for Aline KB Ingestor
    noDeploy:
      - coverage
      - pytest
      - pytest-cov
    dockerImage: public.ecr.aws/sam/build-python3.11:latest
    pipCmdExtraArgs:
      - --upgrade
      - --no-cache-dir
    dockerRunCmdExtraArgs:
      - -v
      - /etc/ssl/certs:/etc/ssl/certs:ro
    dockerBuildCmdExtraArgs:
      - --build-arg
      - DEBIAN_FRONTEND=noninteractive
      - --build-arg
      - 'BUILD_DEPS=gcc g++ make python3-dev libssl-dev'
    dockerExtraFiles:
      - /etc/ssl/certs/ca-certificates.crt
 